<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>java-web-app</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>java-web-app Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <sonar.host.url>http://localhost:9000</sonar.host.url>
    <sonar.login>sqa_0d9a3fd6426d58e092de6374af9baeaf72ebe88b</sonar.login>
  </properties>

  <dependencies>
    <!-- JUnit for testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>4.0.1</version> <!-- Use the version that matches your server -->
        <scope>provided</scope> <!-- Ensure the application server provides this dependency -->
    </dependency>
  </dependencies>

  <build>
    <finalName>java-web-app</finalName>
    <plugins>
      <!-- Compiler plugin to specify Java 17 version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>17</source> <!-- Set to Java 17 -->
          <target>17</target> <!-- Set to Java 17 -->
        </configuration>
      </plugin>

      <!-- WAR plugin updated to a newer version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.3.2</version>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.9.1.2184</version> <!-- Replace with the latest version -->
      </plugin>

    </plugins>
  </build>
</project>
Build the WAR file:

mvn clean package
Test application
******Copy the WAR File into the Tomcat Container*****

docker cp target/java-web-app.war tomcat:/usr/local/tomcat/webapps/

docker restart tomcat
#docker exec <container-id> sh -c "catalina.sh stop && catalina.sh start"

http://<docker-container-ip>:8080/java-web-app/